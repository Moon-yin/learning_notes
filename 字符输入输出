# 字符输入/输出和输入验证

##### 单字符I/O

getchar（）和putchar（）即为单字符I/O函数。它们每次只能处理一个字符。在屏幕上我们看到输入一长串字符后它们也能进行处理，其实它们处理的还是单个字符，之所以表现成这样，是因为==缓冲区==的存在。

getchar（）不需要参数，而putchar（）需要指明参数，因为它需要知道输出的东西是啥。

此外，getchar（）和putchar（）其实并不是真正的函数，它们被定义为预处理器使用的宏。

##### 缓冲区

缓冲区通俗来讲，就是临时存储信息的地方。输入数据时，缓冲区暂时存储数据，使得函数不会立刻对我们的数据进行处理，这样我们就有空进行连续的输入，而不必担心出差错。

无缓冲区时，输入数据时，立即对它进行处理。

缓冲其实也分为两类，$\begin{cases}完全缓冲I/O\\行缓冲I/O\end{cases}$，完全缓冲指缓冲区填满之后才刷新缓冲区，行缓冲指出现换行符就刷新缓冲区。通常键盘输入就是行缓冲。

##### 结束键盘输入

###### 文件、流、键盘输入

文件是存储信息的区域；

流是一个实际输入和输出映射的理想化数据流；

C把输入和输出设备看作是存储设备上的普通文件，因此，可以用处理文件的方式来处理键盘输入。

###### 文件结尾

不同的操作系统通过不同的方式来识别文件结尾。

譬如使用内嵌的Ctrl+Z字符来标记；记录文件大小，当读到文件最大值时，此时即是文件结尾。

==EOF==$\rightarrow$在C语言中，getchar（）和scanf（）识别到文件结尾时，都将返回一个特殊值 *EOF* ，它被定义在<stdio.h>头文件中，相当于`#define EOF -1`，EOF的值的确被定义为-1，原因不再赘述。

*EOF是一个值，而不是一个可以在文件中能找到的符号*。

##### 重定向和文件
